package udp

import (
	"net"
	"testing"
)

func TestOSS(t *testing.T) {

	v := []byte{
		0xc4, 0xd2, 0x19, 0x2d, 0x00, 0x50, 0xa7, 0x39, 0x5a, 0x5a, 0x01, 0x11, 0x48, 0x00,
		0x92, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0x27, 0x37, 0x07, 0x15, 0x00, 0x13, 0x14, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x7f, 0x75, 0xbd, 0x6b, 0x3e, 0x4f, 0x8b, 0x76, 0x2e, 0x84, 0x9c, 0x6e, 0x57, 0x8d,
		0x65, 0x90, 0x9a, 0x57, 0x1f, 0x0e, 0xd6, 0x2c, 0xde, 0xd0, 0x98, 0x8d, 0x11, 0xc6, 0x3c, 0x1b,
		0x7a, 0xc6,
	}
	up := &UDP{}

	t.Log("OOOOOOOOOOO:", v)
	up.TryParse(v)
	t.Log("src:", up.SrcPort)
	t.Log("dst:", up.DstPort)
	t.Log("length", up.Length)
	t.Log("sum", up.Checksum)
	t.Log("payload:", up.Payload)

	src := net.ParseIP("10.10.10.3")
	dst := net.ParseIP("10.10.10.255")

	t.Log("VVV:", up.ToBytes(src, dst))

	down := &UDP{}
	down.TryParse(up.ToBytes(src, dst))

	t.Log("New Checksum:", down.Checksum)
	if down.Checksum != up.Checksum {
		t.Fail()
	}
}
